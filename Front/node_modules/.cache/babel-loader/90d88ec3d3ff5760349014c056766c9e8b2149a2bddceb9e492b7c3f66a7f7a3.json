{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  data: [],\n  isSuccess: false,\n  message: \"\",\n  loading: false\n};\nconst getFromations = createAsyncThunk(\"get/formationsData\", (arg, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {} catch (error) {\n    rejectWithValue(error.response.data);\n  }\n});\nconst formationSlice = createSlice({\n  name: 'formation',\n  initialState,\n  reducers: {},\n  extraReducers: {}\n});\nexport default formationSlice;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","data","isSuccess","message","loading","getFromations","arg","rejectWithValue","error","response","formationSlice","name","reducers","extraReducers"],"sources":["/Users/quent/Documents/GitHub/Scoolize-Predict/src/redux/reducers/formation.js"],"sourcesContent":["import { createSlice,createAsyncThunk} from '@reduxjs/toolkit'\n\nconst initialState = { data:[] , isSuccess : false , message:\"\" , loading:false }\n\nconst getFromations = createAsyncThunk(\n    \"get/formationsData\" , \n    (arg , {rejectWithValue})=>{\n        try {\n            \n        } catch (error) {\n            rejectWithValue(error.response.data)\n        }\n    }\n)\n\nconst formationSlice = createSlice({\n  name: 'formation',\n  initialState,\n  reducers: {\n    \n  },\n\n  extraReducers : {\n\n}\n})\n\n\n\nexport default formationSlice"],"mappings":"AAAA,SAASA,WAAW,EAACC,gBAAgB,QAAO,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAAEC,IAAI,EAAC,EAAE;EAAGC,SAAS,EAAG,KAAK;EAAGC,OAAO,EAAC,EAAE;EAAGC,OAAO,EAAC;AAAM,CAAC;AAEjF,MAAMC,aAAa,GAAGN,gBAAgB,CAClC,oBAAoB,EACpB,CAACO,GAAG,WAAuB;EAAA,IAApB;IAACC;EAAe,CAAC;EACpB,IAAI,CAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZD,eAAe,CAACC,KAAK,CAACC,QAAQ,CAACR,IAAI,CAAC;EACxC;AACJ,CAAC,CACJ;AAED,MAAMS,cAAc,GAAGZ,WAAW,CAAC;EACjCa,IAAI,EAAE,WAAW;EACjBX,YAAY;EACZY,QAAQ,EAAE,CAEV,CAAC;EAEDC,aAAa,EAAG,CAElB;AACA,CAAC,CAAC;AAIF,eAAeH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}